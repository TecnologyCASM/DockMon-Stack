services:
  # üõ†Ô∏è Portainer: Panel web para administrar contenedores Docker
  portainer:
    image: portainer/portainer-ce:latest         # √öltima versi√≥n de Portainer CE
    container_name: portainer                    # Nombre del contenedor
    hostname: portainer                          # Nombre de host interno
    network_mode: bridge                         # Usa red bridge por defecto
    security_opt:
      - no-new-privileges:true                   # Previene escalamiento de privilegios
    environment:
      TZ: ${TZ}                                  # Zona horaria definida en .env
    volumes:
      - /etc/localtime:/etc/localtime:ro         # Sincroniza hora del host
      - /var/run/docker.sock:/var/run/docker.sock:ro # Permite a Portainer acceder al daemon Docker
      - ./portainer-data:/data                   # Persistencia de datos de Portainer
    ports:
      - "9000:9000"                               # Acceso al panel web en http://localhost:9000
    restart: unless-stopped                      # Reinicia salvo que se detenga manualmente

  # ü§ñ Controller-Bot: Bot de Telegram para monitoreo y control de contenedores
  docker-controller-bot:
    image: dgongut/docker-controller-bot:latest  # Imagen oficial del bot
    container_name: controller-bot               # Nombre del contenedor
    hostname: controller-bot                     # Nombre de host interno
    network_mode: host                           # Accede directamente a la red del host
    tty: true                                     # Habilita terminal interactiva
    environment:
      TZ: ${TZ}                                   # Zona horaria
      CONTAINER_NAME: docker-bot                  # Nombre l√≥gico del bot
      TELEGRAM_TOKEN: ${BOT_TOKEN}                # Token del bot (definido en .env)
      TELEGRAM_ADMIN: ${CHAT_ID}                  # ID del administrador que recibe alertas
      CHECK_UPDATE_EVERY_HOURS: 720               # Verifica actualizaciones cada 30 d√≠as
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Acceso al daemon Docker para monitoreo
      - ./config:/app/schedule                    # Configuraci√≥n de tareas programadas
    restart: always                               # Reinicia autom√°ticamente ante fallos
